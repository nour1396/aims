Client.find().then((err,result)=>{
        if(err){console.log(err)}else if(result.length){
            console.log('found',result);
        }else {console.log('no doc founded')}
router.get('/',(req,res)=>{
    var result = getResult((err, result)=>{
        res.render('index',{Client:result})
    })
})})





({
       /*     personalInformation : {
                firstName : req.body.firstName,
                secondName : req.body.secondName,
                thirdName : req.body.thirdName,
                fourthName : req.body.fourthName,
                lastName : req.body.lastName,
                title : req.body.title,
                gender : req.body.gender,
                nationality : req.body.nationality
           },
            identityCard : {
                idNumber : req.body.idNumber,
                address : req.body.address,
                issuedFrom : req.body.issedFrom,
                gender : req.body.gender,
                fullName:req.body.fullName,
                religion : req.body.religion,
                maritalStatus : req.body.maritalStatus,
                job : req.body.job,
                husbandName : req.body.husbandName,
                startDate : req.body.startNumber,
                endDate : req.body.endDate,
                uploadId:req.body.uploadId
           },
            militaryState : {
                fullName : req.body.fullName,
                birthDate : req.body.birthDate,
                militaryServiceIDTriple : req.body.militaryServiceIDTriple,
                issuedFrom : req.body.issuedFrom,
                idNumber : req.body.idNumber,
                IDIssuedFrom : req.body.IDIssuedFrom,
                decisionCode : req.body.decisionCode,
                decisionDate : req.body.decisionDate,
                decisionNumber : req.body.decisionNumber,
                decision : req.body.decision,
                uploadMilitary:req.body.uploadMilitary
           },
            familyStatus : {
                numberOfFamilyMembers : req.body.numberOfFamilyMembers,
                numberOfChildrenMales : req.body.numberOfChildrenMales,
                numberOfChildrenFemales : req.body.numberOfChildrenFemales,
                numberOfWifes : req.body.numberOfWifes,
                parentStatus : req.body.parentStatus
           },
            birthDetails : {
                nationalNumber:req.body.nationalNumber,
                fullNameInEnglish : req.body.fullNameInEnglish,
                fullNameInArabic : req.body.fullNameInArabic,
                nationality : req.body.nationality,
                placeOfBirth : req.body.placeOfBirth,
                religion : req.body.religion,
                gender : req.body.gender,
                dateOfBirth : req.body.dateOfBirth,
                fullFatherName : req.body.fullFatherName,
                hisReligion : req.body.hisReligion,
                hisNationality : req.body.hisNationality,
                fullMotherName : req.body.fullMotherName,
                herReligion : req.body.herReligion,
                herNationality : req.body.herNationality,
                civilRegister : req.body.civilRegister,
                issueRegister : req.body.issueRegister,
                registerDate : req.body.registerDate,
                issueDate : req.body.issueDate,
                uploadCopy : req.body.uploadCopy
           },
            addressDetails : {
                addressType : req.body.addressType,
                expirationDateOfRenting : req.body.expirationDateOfRenting,
                country : req.body.country,
                city : req.body.city,
                area : req.body.area,
                realEstateType : req.body.realEstateType,
                realEstateNumber : req.body.realEstateNumber,
                floorNumber : req.body.floorNumber,
                appartmentNumber : req.body.appartmentNumber,
                streetName : req.body.streetName,
                detailedAddress : req.body.detailedAddress
           },
            legalInformation : {
                drivingLicence : {
                    trafficUnit : req.body.trafficUnit,
                    ID : req.body.ID,
                    address : req.body.address,
                    nationality : req.body.nationality,
                    issueDate : req.body.issueDate,
                    endDate : req.body.endDate,
                    job : req.body.job,
                    typeOfLicence : req.body.typeOfLicence,
                    licenceNumber : req.body.licenceNumber,
                    typeOfVehicle : req.body.typeOfVehicle,
                    wearingGlasses : req.body.wearingGlasses,
                    copyOfLicence : req.body.copyOfLicence
               },
                internationalDrivingLicence : {
                    name : req.body.name,
                    address : req.body.address,
                    placeOfBirth : req.body.placeOfBirth,
                    dateOfBirth : req.body.dateOfBirth,
                    height : req.body.height,
                    gender : req.body.gender,
                    eyesColor : req.body.eyesColor,
                    bloodGroup : req.body.bloodGroup,
                    passportNumber : req.body.passportNumber,
                    classCategory : req.body.classCategory,
                    licenceType : req.body.licenceType,
                    issuedDate : req.body.issuedDate,
                    expireDate : req.body.expireDate,
                    category : req.body.category,
                    iploadCopy:req.body.uploadCopy
               },
                passport : {
                    passportNumber : req.body.passportNumber ,
                    militaryStatus : req.body.militaryStatus,
                    passportType : req.body.passportType,
                    passportCountry : req.body.passportCountry,
                    issuedAt : req.body.issuedAt,
                    issueDate: req.body.issueDate,
                    endDate : req.body.endDate,
                    profession : req.body.profession,
                    issueOffice : req.body.issueOffice,
                    copyOfPassport : req.body.copyOfPassport
               },
                visa : {
                    typeOfVisa : req.body.typeOfVisa,
                    validFor : req.body.validFor,
                    periodValidity : {
                        from : req.body.from,
                        to : req.body.to
                   },
                    numberOfEntries : req.body.numberOfEntries,
                    durationOfStay : req.body.durationOfStay,
                    profession : req.body.profession,
                    religion : req.body.religion,
                    nationality : req.body.nationality,
                    issuingAuthority : req.body.issuingAuthority,
                    issuedDate : req.body.issuedDate,
                    expirationDate : req.body.expirationDate,
                    purpose : req.body.purpose,
                    transporter : req.body.transporter,
                    passportNumber : req.body.passportNumber,
                    firstName : req.body.firstName,
                    lastName : req.body.lastName,
                    remarks : req.body.remarks
               },
                residencePermit : {
                    typeOfResidencePermit : req.body.typeOfResidencePermit,
                    fullName : req.body.fullName,
                    numberOfResidencePermit : req.body.numberOfResidencePermit,
                    issuedPlace : req.body.issuedPlace,
                    issuedDate : req.body.issuedDate,
                    expirationDate : req.body.expirationDate,
                    birthDate : req.body.birthDate,
                    profession : req.body.profession,
                    nationality : req.body.nationality,
                    religion : req.body.religion,
                    employerSponser: req.body.employerSponser,
                    accompaniedBy : req.body.accompaniedBy,
                    copyOfResidencePermit : req.body.copyOfResidencePermit
               },
                sponserInformation : {
                    name : req.body.name,
                    id : req.body.id ,
                    mobileNumber : req.body.mobileNumber,
                    workPlace : req.body.workPlace,
                    contractName : req.body.contractName,
                    contractNumber : req.body.contractNumber,
                    licenceNumber : req.body.licenceNumber,
                    issuedDate : req.body.issuedDate,
                    expirationDate : req.body.expirationDate,
                    country : req.body.country,
                    city : req.body.city
               },
                policeRecordsCertificate : {
                    fullName : req.body.fullName,
                    gender : req.body.gender,
                    IDNumber : req.body.IDNumber,
                    from : req.body.from,
                    address : req.body.address,
                    presentedTo : req.body.presentedTo,
                    transactionNumber : req.body.transactionNumber,
                    dateOfIssue : req.body.dateOfIssue,
                    resultOfInspection : req.body.resultOfInspection,
                    ifAnyMentionIt : req.body.ifAnyMentionIt,
                    uploadCopy : req.body.uploadCopy
               },
                owns : req.body.owns
           ,
            bankAccount : {
                accountType : req.body.accountType,
                accountNumber : req.body.accountNumber,
                bankName : req.body.bankName,
                currency : req.body.currency,
                branch : req.body.branch
           },*/





           /*  medicalProfile : {
                vitalRates : {
                    bloodPressure : req.body.bloodPressure,
                    breathingAverage : req.body.breathingAverage,
                    pulseAverage : req.body.pulseAverage
               },
                bloodGroup : req.body.bloodGroup,
                physicalProperties : {
                    hipSize : req.body.hipSize,
                    wristSize : req.body.wristSize,
                    height : req.body.height,
                    weight : req.body.weight,
                    eyeGlasses : req.body.eyeGlasses,
                    rightEyeOptometry : req.body.rightEyeOptometry,
                    leftEyeOptometry : req.body.leftEyeOptometry
               },
                regularHabits : {
                    eatFruits : req.body.eatFruits,
                    eatVegetables : req.body.eatVegetables,
                    eatChicken : req.body.eatChicken,
                    eatMeats : req.body.eatMeats,
                    smoke : req.body.smoke,
                    drinkAlchole : req.body.drinkAlchole,
                    takeDrugs : req.body.takeDrugs,
                    effortWithinWork : req.body.effortWithinWork,
                    effortWithinFootwork : req.body.effortWithinFootwork,
                    effortWithinVacations : req.body.effortWithinVacations
               },
                tattoo : req.body.tattoo,
                chronicDiseases : {
                    diseases : req.body.diseases,
                    dengrouseDiseasesAndPreviousSurgeries : req.body.dengrouseDiseasesAndPreviousSurgeries
               },
                currentMedicines : {
                    medicine : req.body.medicine,
                    vaccinations : req.body.vaccinations
               },
                allergy : {
                    allergyOfFood : req.body.allergyOfFood,
                    allergyOfMedicine : req.body.allergyOfMedicine,
                    allergyOfMaterial : req.body.allergyOfMaterial
               },
                diseasesOfFamily : req.body.diseasesOfFamily,
                statusOfPhysicalAndMental : req.body.statusOfPhysicalAndMental
           },
           contactData : {
                telephoneNumber : req.body.telephoneNumber,
                mobileNumber: req.body.mobileNumber,
                postalCode : req.body.postalCode,
                email : req.body.email,
                contactLanguage : req.body.contactLanguage,
                nativeLanguage : req.body.nativeLanguage,
                spokenLanguage : req.body.spokenLanguage
           },
            Education : {
                lastDegreeLevel : req.body.lastDegreeLevel,
                university : {
                    universtyName : req.body.universtyName,
                    facultyName : req.body.facultyName,
                    degreeLevel : req.body.degreeLevel,
                    department : req.body.department,
                    grade : req.body.grade,
                    graduateDate : req.body.graduateDate,
                    copyOfCertificate : req.body.copyOfCertificate
               },
                secondrySchool : {
                    secondrySchoolType : req.body.secondrySchoolType,
                    secondrySchoolName : req.body.secondrySchoolName,
                    grade : req.body.grade,
                    graduateDate : req.body.graduateDate,
                    copyOfCertificate : req.body.copyOfCertificate
               },
                middleSchool : {
                    typeOfSchool : req.body.typeOfSchool,
                    schoolName : req.body.schoolName,
                    grade : req.body.grade,
                    graduateDate : req.body.graduateDate
               },
                primarySchool : {
                    schoolType : req.body.schoolType,
                    schoolName : req.body.schoolName,
                    grade : req.body.grade ,
                    graduateDate : req.body.graduateDate
               },
                trainingAndCourses : {
                    trainingTopic : req.body.trainingTopic,
                    organizationOrinstitutionName : req.body.organizationOrinstitutionName,
                    month : req.body.month,
                    year : req.body.year,
                    additionalInformation : req.body.additionalInformation
               },
                skills : {
                    skillName : req.body.skillName,
                    proficiency : req.body.proficiency,
                    interest : req.body.interest,
                    yearsOfExperience : req.body.yearsOfExperience,
                    addJustification : req.body.addJustification
               },
                languages : {
                    language : req.body.language,
                    readingProficiency : req.body.readingProficiency,
                    writingProficiency : req.body.writingProficiency,
                    listeningProficiency : req.body.listeningProficiency,
                    speakingProficiency : req.body.speakingProficiency,
                    addJustification : req.body.addJustification
               }
           },*/


            socialInsurance : {
                type : req.body.type,
                insuranceNumber : req.body.insuranceNumber,
                dateOfRegistryCertificate : req.body.dateOfRegistryCertificate,
                numberOfRegistryCertificate : req.body.numberOfRegistryCertificate,
                numberOfHealthInsurance : req.body.numberOfHealthInsurance,
                uploadCopy : req.body.uploadCopy
           },
            syndicate : {
                syndicateName : req.body.syndicateName,
                name : req.body.name,
                licencingNumber : req.body.licencingNumber,
                registryDate : req.body.registryDate,
                lastYearDischarge : req.body.lastYearDischarge,
                expirationDate : req.body.expirationDate,
                typeOfSpecialization : req.body.typeOfSpecialization,
                branchUnion : req.body.branchUnion,
                uploadCopy : req.body.uploadCopy
           },
            careerInterests : {
                minimumSalaryWouldBeAccepted : req.body.minimumSalaryWouldBeAccepted,
                currentCareerLevel : req.body.currentCareerLevel,
                typesOfJobAreBeOpenedTo  : req.body.typesOfJobAreBeOpenedTo,
                jobRolesAreBeInteresetedIn  : req.body.jobRolesAreBeInteresetedIn,
                countriesAndCitiesToBeWorkedIn : req.body.countriesAndCitiesToBeWorkedIn,
                currentJobSearchStatus : req.body.currentJobSearchStatus
           },
            careerHistory : {
                companyName : req.body.companyName,
                position : req.body.position,
                startDate : req.body.startDate,
                endDate : req.body.endDate,
                reasonOfLeaving : req.body.reasonOfLeaving,
                yearsOfExperience  : req.body.yearsOfExperience
           },
            appearance : {
                bodyType : req.body.bodyType,
                hairType : req.body.hairType,
                hairColor : req.body.hairColor,
                height : req.body.height,
                weight : req.body.weight,
                specialMark : req.body.specialMark,
                eyeColor : req.body.eyeColor
           },
            sizes : {
                clothSize: req.body.clothSize,
                pantsSize : req.body.pantsSize,
                hatSize : req.body.hatSize,
                shoesSize : req.body.shoesSize
           },
            deathData : {
                name : req.body.name,
                gender : req.body.gender,
                nationality : req.body.nationality,
                motherName : req.body.motherName,
                maritalStatus : req.body.maritalStatus,
                deathDate : req.body.deathDate,
                deathPlace : req.body.deathPlace,
                ageAtDeath : req.body.ageAtDeath,
                birthPlace : req.body.birthPlace
           },
            activities : {
                sportType : req.body.sportType,
                chievement : req.body.chievement,
                numberOfMedals : req.body.numberOfMedals,
                copyOfCerticates : req.body.copyOfCerticates,
                hobbies : req.body.hobbies
           },
            healthCertificate : {
                startDate : req.body.startDate,
                endDate : req.body.endDate,
                fullName : req.body.fullName,
                job : req.body.job,
                birthDateAndAge : req.body.birthDateAndAge,
                familyID : req.body.familyID,
                withDate : req.body.withDate,
                civilRegister : req.body.civilRegister,
                result : req.body.result,
                uploadCopy : req.body.uploadCopy
           },
            financialStatus : req.body.financialStatus,
            socialMediaAccounts : {
                facebook : req.body.facebook,
                instagram : req.body.instagram,
                whatsapp : req.body.whatsapp,
                twitter : req.body.twitter,
                linkedin : req.body.linkedin,
                Behance : req.body.Behance,
                GitHub : req.body.GitHub,
                StackOverflow : req.body.StackOverflow,
                Blog : req.body.Blog,
                Website : req.body.Website,
                Other : req.body.Other
           },
**************************************
            bodyMeasures : {
                female : {
                    neckRotation : req.body.neckRotation,
                    bustRotation : req.body.bustRotation,
                    bustHeight : req.body.bustHeight,
                    armRotation : req.body.armRotation,
                    wristRotation : req.body.wristRotation,
                    waistRotation : req.body.waistRotation,
                    hipHeight : req.body.hipHeight,
                    hipRotation : req.body.hipRotation,
                    shoulderLength : req.body.shoulderLength,
                    backHeight : req.body.backHeight,
                    sleeveLength : req.body.sleeveLength
               },
                male : {
                    shoulderLength : req.body.shoulderLength,
                    chestRotation : req.body.chestRotation,
                    sleeveLength : req.body.sleeveLength,
                    neckRotation : req.body.neckRotation,
                    waistRotation : req.body.waistRotation,
                    hipHeight : req.body.hipHeight,
                    hipRotation : req.body.hipRotation
               }
           },
            disabilities : {
                disabilityType : req.body.disabilityType,
                missingParts : req.body.missingParts
           }
       
        }});




        {
    "_id" : ObjectId("5d63bc98ee270f020c070c1a"),
    "legalInformation" : {
        "drivingLicence" : {
            "DLtrafficUnit" : "",
            "DLID" : null,
            "DLaddress" : "",
            "DLissueDate" : ISODate("2019-08-09T00:00:00.000Z"),
            "DLendDate" : ISODate("2019-08-22T00:00:00.000Z"),
            "DLjob" : "",
            "DLtypeOfLicence" : "",
            "DLlicenceNumber" : null,
            "DLtypeOfVehicle" : "",
            "DLwearingGlasses" : "Yes",
            "DLcopyOfLicence" : ""
        },
        "internationalDrivingLicence" : {
            "IDLname" : "",
            "IDLaddress" : "",
            "IDLplaceOfBirth" : "",
            "IDLdateOfBirth" : null,
            "IDLheight" : "",
            "IDLgender" : "Select Your Gender",
            "IDLeyesColor" : "",
            "IDLbloodGroup" : "",
            "IDLpassportNumber" : null,
            "IDLclassCategory" : "",
            "IDLlicenceType" : "",
            "IDLissuedDate" : ISODate("2019-08-16T00:00:00.000Z"),
            "IDLexpireDate" : ISODate("2019-08-22T00:00:00.000Z"),
            "IDLcategory" : "",
            "IDLuploadCopy" : ""
        },
        "passport" : {
            "PpassportNumber" : null,
            "PmilitaryStatus" : "",
            "PpassportType" : "",
            "PpassportCountry" : "",
            "PissuedAt" : "",
            "PissueDate" : ISODate("2019-08-22T00:00:00.000Z"),
            "PendDate" : ISODate("2019-08-09T00:00:00.000Z"),
            "Pprofession" : "",
            "PissueOffice" : "",
            "PcopyOfPassport" : ""
        },
        "visa" : {
            "VperiodValidity" : {
                "VperiodValidityFrom" : ISODate("2019-08-30T00:00:00.000Z"),
                "VperiodValidityTo" : ISODate("2019-08-22T00:00:00.000Z")
            },
            "VnumberOfEntries" : null,
            "VdurationOfStay" : null,
            "Vprofession" : "",
            "Vreligion" : "",
            "VissuingAuthority" : "",
            "VissuedDate" : ISODate("2019-08-31T00:00:00.000Z"),
            "VexpirationDate" : ISODate("2019-08-23T00:00:00.000Z"),
            "Vpurpose" : "",
            "Vtransporter" : "",
            "VpassportNumber" : null,
            "VfirstName" : "",
            "VlastName" : "",
            "Vremarks" : ""
        },
        "residencePermit" : {
            "RPfullName" : "",
            "RPnumberOfResidencePermit" : null,
            "RPissuedPlace" : "",
            "RPissuedDate" : ISODate("2019-08-29T00:00:00.000Z"),
            "RPexpirationDate" : ISODate("2019-08-15T00:00:00.000Z"),
            "RPbirthDate" : ISODate("2019-08-29T00:00:00.000Z"),
            "RPemployerSponser" : "",
            "RPaccompaniedBy" : "",
            "RPcopyOfResidencePermit" : ""
        },
        "sponserInformation" : {
            "SIname" : "",
            "SIid" : "",
            "SImobileNumber" : null,
            "SIworkPlace" : "",
            "SIcontractName" : "",
            "SIcontractNumber" : null,
            "SIlicenceNumber" : null,
            "SIissuedDate" : ISODate("2019-08-23T00:00:00.000Z"),
            "SIexpirationDate" : ISODate("2019-08-22T00:00:00.000Z"),
            "SIcountry" : "",
            "SIcity" : ""
        },
        "policeRecordsCertificate" : {
            "PCfullName" : "",
            "PCgender" : "Female",
            "PCIDNumber" : "",
            "PCfrom" : "",
            "PCaddress" : "",
            "PCpresentedTo" : "",
            "PCtransactionNumber" : null,
            "PCdateOfIssue" : ISODate("2019-08-29T00:00:00.000Z"),
            "PCresultOfInspection" : "2019-08-28",
            "PCifAnyMentionIt" : "",
            "PCuploadCopy" : ""
        },
        "bankAccount" : {
            "BAaccountType" : "يئبللا",
            "BAaccountNumber" : null,
            "BAbankName" : "",
            "BAcurrency" : "",
            "BAbranch" : ""
        }
    },
    "personalInformation" : {
        "PIfirstName" : "nour",
        "PIsecondName" : "m",
        "PIthirdName" : "i",
        "PIfourthName" : "elkashef",
        "PIlastName" : "elsmahy",
        "PItitle" : "no",
        "PIgender" : "Female",
        "PInationality" : "no"
    },
    "identityCard" : {
        "ICidNumber" : 52684863453645.0,
        "ICstartDate" : ISODate("2019-08-16T00:00:00.000Z"),
        "ICendDate" : ISODate("2019-08-29T00:00:00.000Z"),
        "ICfullName" : "",
        "ICgender" : "Female",
        "ICaddress" : "ئلا",
        "ICreligion" : "",
        "ICjob" : "",
        "IChusbandName" : "",
        "ICuploadId" : ""
    },
    "militaryState" : {
        "MSfullName" : "",
        "MSbirthDate" : ISODate("2019-08-22T00:00:00.000Z"),
        "MSmilitaryServiceIDTriple" : null,
        "MSissuedFrom" : "",
        "MSidNumber" : null,
        "MSdecisionCode" : "",
        "MSdecisionDate" : ISODate("2019-08-20T00:00:00.000Z"),
        "MSdecisionNumber" : null,
        "MSdecision" : "",
        "MSuploadMilitary" : ""
    },
    "familyStatus" : {
        "FSnumberOfFamilyMembers" : null,
        "FSnumberOfChildrenMales" : null,
        "FSnumberOfChildrenFemales" : null,
        "FSnumberOfWifes" : null,
        "FSparentStatus" : "Married"
    },
    "birthDetails" : {
        "BDnationalNumber" : null,
        "BDfullNameInEnglish" : "",
        "BDfullNameInArabic" : "",
        "BDplaceOfBirth" : "",
        "BDreligion" : "",
        "BDgender" : "Female",
        "BDdateOfBirth" : ISODate("2019-08-16T00:00:00.000Z"),
        "BDfullFatherName" : "",
        "BDhisReligion" : "",
        "BDfullMotherName" : "",
        "BDherReligion" : "",
        "BDcivilRegister" : "",
        "BDissueRegister" : "",
        "BDregisterDate" : null,
        "BDissueDate" : null,
        "BDuploadCopy" : ""
    },
    "addressDetails" : {
        "ADaddressType" : "Family Residence",
        "ADexpirationDateOfRenting" : ISODate("2019-08-16T00:00:00.000Z"),
        "ADcountry" : "",
        "ADcity" : "",
        "ADarea" : "",
        "ADfloorNumber" : null,
        "ADappartmentNumber" : null,
        "ADstreetName" : "",
        "ADdetailedAddress" : "",
        "ADowns" : ""
    },
    "updatedAt" : ISODate("2019-08-26T11:03:52.733Z"),
    "createdAt" : ISODate("2019-08-26T11:03:52.733Z"),
    "__v" : 0
}