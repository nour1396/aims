{"version":3,"sources":["../../../../lib/stream/xlsx/worksheet-writer.js"],"names":["_","require","RelType","colCache","Dimensions","StringBuf","Row","Column","SheetRelsWriter","SheetCommentsWriter","DataValidations","xmlBuffer","ListXform","DataValidationsXform","SheetPropertiesXform","SheetFormatPropertiesXform","ColXform","RowXform","HyperlinkXform","SheetViewXform","SheetProtectionXform","PageMarginsXform","PageSetupXform","AutoFilterXform","PictureXform","ConditionalFormattingsXform","xform","dataValidations","sheetProperties","sheetFormatProperties","columns","tag","length","childXform","row","hyperlinks","sheetViews","sheetProtection","pageMargins","pageSeteup","autoFilter","picture","conditionalFormattings","WorksheetWriter","options","id","name","state","_rows","_columns","_keys","_merges","add","_sheetRelsWriter","_sheetCommentsWriter","_dimensions","_rowZero","committed","_formulae","_siFormulae","conditionalFormatting","properties","Object","assign","defaultRowHeight","dyDescent","outlineLevelCol","outlineLevelRow","pageSetup","margins","left","right","top","bottom","header","footer","orientation","horizontalDpi","verticalDpi","fitToPage","fitToWidth","fitToHeight","scale","pageOrder","blackAndWhite","draft","cellComments","errors","paperSize","undefined","showRowColHeaders","showGridLines","horizontalCentered","verticalCentered","rowBreaks","colBreaks","useSharedStrings","_workbook","workbook","hasComments","_views","views","_media","_writeOpenWorksheet","startedData","Error","forEach","cRow","_writeRow","_writeOpenSheetData","_writeCloseSheetData","_writeAutoFilter","_writeMergeCells","_writeHyperlinks","_writeConditionalFormatting","_writeDataValidations","_writeSheetProtection","_writePageMargins","_writePageSetup","_writeBackground","_writeLegacyData","_writeCloseWorksheet","stream","end","commit","key","value","f","each","c","col","l2n","n","push","iteratee","includeEmpty","_nextRow","i","getRow","hasValues","number","found","shift","rowNumber","index","values","r","address","getAddress","findRow","findCell","column","getCellEx","dimensions","Array","prototype","slice","call","arguments","merge","intersects","master","getCell","j","cf","filter","console","log","splice","Function","imageId","_background","text","reset","addText","write","xmlBuf","sheetPropertiesModel","outlineProperties","tabColor","toXml","sheetFormatPropertiesModel","defaultColWidth","_writeSheetProperties","_writeSheetFormatProperties","cols","toModel","prepare","styles","_write","_writeColumns","height","model","sharedStrings","hyperlinksProxy","merges","formulae","siFormulae","comments","addComments","_hyperlinks","image","getImage","pictureId","addMedia","Target","Type","Image","rId","vmlRelId","_stream","_openStream","pause","_headerRowCount","reduce","pv","cv","headerCount","headers","Math","max","count","defn","module","exports"],"mappings":"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","sourcesContent":["const _ = require('../../utils/under-dash');\r\n\r\nconst RelType = require('../../xlsx/rel-type');\r\n\r\nconst colCache = require('../../utils/col-cache');\r\nconst Dimensions = require('../../doc/range');\r\nconst StringBuf = require('../../utils/string-buf');\r\n\r\nconst Row = require('../../doc/row');\r\nconst Column = require('../../doc/column');\r\n\r\nconst SheetRelsWriter = require('./sheet-rels-writer');\r\nconst SheetCommentsWriter = require('./sheet-comments-writer');\r\nconst DataValidations = require('../../doc/data-validations');\r\n\r\nconst xmlBuffer = new StringBuf();\r\n\r\n// ============================================================================================\r\n// Xforms\r\nconst ListXform = require('../../xlsx/xform/list-xform');\r\nconst DataValidationsXform = require('../../xlsx/xform/sheet/data-validations-xform');\r\nconst SheetPropertiesXform = require('../../xlsx/xform/sheet/sheet-properties-xform');\r\nconst SheetFormatPropertiesXform = require('../../xlsx/xform/sheet/sheet-format-properties-xform');\r\nconst ColXform = require('../../xlsx/xform/sheet/col-xform');\r\nconst RowXform = require('../../xlsx/xform/sheet/row-xform');\r\nconst HyperlinkXform = require('../../xlsx/xform/sheet/hyperlink-xform');\r\nconst SheetViewXform = require('../../xlsx/xform/sheet/sheet-view-xform');\r\nconst SheetProtectionXform = require('../../xlsx/xform/sheet/sheet-protection-xform');\r\nconst PageMarginsXform = require('../../xlsx/xform/sheet/page-margins-xform');\r\nconst PageSetupXform = require('../../xlsx/xform/sheet/page-setup-xform');\r\nconst AutoFilterXform = require('../../xlsx/xform/sheet/auto-filter-xform');\r\nconst PictureXform = require('../../xlsx/xform/sheet/picture-xform');\r\nconst ConditionalFormattingsXform = require('../../xlsx/xform/sheet/cf/conditional-formattings-xform');\r\n\r\n// since prepare and render are functional, we can use singletons\r\nconst xform = {\r\n  dataValidations: new DataValidationsXform(),\r\n  sheetProperties: new SheetPropertiesXform(),\r\n  sheetFormatProperties: new SheetFormatPropertiesXform(),\r\n  columns: new ListXform({tag: 'cols', length: false, childXform: new ColXform()}),\r\n  row: new RowXform(),\r\n  hyperlinks: new ListXform({tag: 'hyperlinks', length: false, childXform: new HyperlinkXform()}),\r\n  sheetViews: new ListXform({tag: 'sheetViews', length: false, childXform: new SheetViewXform()}),\r\n  sheetProtection: new SheetProtectionXform(),\r\n  pageMargins: new PageMarginsXform(),\r\n  pageSeteup: new PageSetupXform(),\r\n  autoFilter: new AutoFilterXform(),\r\n  picture: new PictureXform(),\r\n  conditionalFormattings: new ConditionalFormattingsXform(),\r\n};\r\n\r\n// ============================================================================================\r\n\r\nclass WorksheetWriter {\r\n  constructor(options) {\r\n    // in a workbook, each sheet will have a number\r\n    this.id = options.id;\r\n\r\n    // and a name\r\n    this.name = options.name || `Sheet${this.id}`;\r\n\r\n    // add a state\r\n    this.state = options.state || 'visible';\r\n\r\n    // rows are stored here while they need to be worked on.\r\n    // when they are committed, they will be deleted.\r\n    this._rows = [];\r\n\r\n    // column definitions\r\n    this._columns = null;\r\n\r\n    // column keys (addRow convenience): key ==> this._columns index\r\n    this._keys = {};\r\n\r\n    // keep record of all merges\r\n    this._merges = [];\r\n    this._merges.add = function() {}; // ignore cell instruction\r\n\r\n    // keep record of all hyperlinks\r\n    this._sheetRelsWriter = new SheetRelsWriter(options);\r\n\r\n    this._sheetCommentsWriter = new SheetCommentsWriter(this, this._sheetRelsWriter, options);\r\n\r\n    // keep a record of dimensions\r\n    this._dimensions = new Dimensions();\r\n\r\n    // first uncommitted row\r\n    this._rowZero = 1;\r\n\r\n    // committed flag\r\n    this.committed = false;\r\n\r\n    // for data validations\r\n    this.dataValidations = new DataValidations();\r\n\r\n    // for sharing formulae\r\n    this._formulae = {};\r\n    this._siFormulae = 0;\r\n\r\n    // keep a record of conditionalFormattings\r\n    this.conditionalFormatting = [];\r\n\r\n    // for default row height, outline levels, etc\r\n    this.properties = Object.assign(\r\n      {},\r\n      {\r\n        defaultRowHeight: 15,\r\n        dyDescent: 55,\r\n        outlineLevelCol: 0,\r\n        outlineLevelRow: 0,\r\n      },\r\n      options.properties\r\n    );\r\n\r\n    // for all things printing\r\n    this.pageSetup = Object.assign(\r\n      {},\r\n      {\r\n        margins: {left: 0.7, right: 0.7, top: 0.75, bottom: 0.75, header: 0.3, footer: 0.3},\r\n        orientation: 'portrait',\r\n        horizontalDpi: 4294967295,\r\n        verticalDpi: 4294967295,\r\n        fitToPage: !!(options.pageSetup && (options.pageSetup.fitToWidth || options.pageSetup.fitToHeight) && !options.pageSetup.scale),\r\n        pageOrder: 'downThenOver',\r\n        blackAndWhite: false,\r\n        draft: false,\r\n        cellComments: 'None',\r\n        errors: 'displayed',\r\n        scale: 100,\r\n        fitToWidth: 1,\r\n        fitToHeight: 1,\r\n        paperSize: undefined,\r\n        showRowColHeaders: false,\r\n        showGridLines: false,\r\n        horizontalCentered: false,\r\n        verticalCentered: false,\r\n        rowBreaks: null,\r\n        colBreaks: null,\r\n      },\r\n      options.pageSetup\r\n    );\r\n\r\n    // using shared strings creates a smaller xlsx file but may use more memory\r\n    this.useSharedStrings = options.useSharedStrings || false;\r\n\r\n    this._workbook = options.workbook;\r\n\r\n    this.hasComments = false;\r\n\r\n    // views\r\n    this._views = options.views || [];\r\n\r\n    // auto filter\r\n    this.autoFilter = options.autoFilter || null;\r\n\r\n    this._media = [];\r\n\r\n    // start writing to stream now\r\n    this._writeOpenWorksheet();\r\n\r\n    this.startedData = false;\r\n  }\r\n\r\n  get workbook() {\r\n    return this._workbook;\r\n  }\r\n\r\n  get stream() {\r\n    if (!this._stream) {\r\n      // eslint-disable-next-line no-underscore-dangle\r\n      this._stream = this._workbook._openStream(`/xl/worksheets/sheet${this.id}.xml`);\r\n\r\n      // pause stream to prevent 'data' events\r\n      this._stream.pause();\r\n    }\r\n    return this._stream;\r\n  }\r\n\r\n  // destroy - not a valid operation for a streaming writer\r\n  // even though some streamers might be able to, it's a bad idea.\r\n  destroy() {\r\n    throw new Error('Invalid Operation: destroy');\r\n  }\r\n\r\n  commit() {\r\n    if (this.committed) {\r\n      return;\r\n    }\r\n    // commit all rows\r\n    this._rows.forEach(cRow => {\r\n      if (cRow) {\r\n        // write the row to the stream\r\n        this._writeRow(cRow);\r\n      }\r\n    });\r\n\r\n    // we _cannot_ accept new rows from now on\r\n    this._rows = null;\r\n\r\n    if (!this.startedData) {\r\n      this._writeOpenSheetData();\r\n    }\r\n    this._writeCloseSheetData();\r\n    this._writeAutoFilter();\r\n    this._writeMergeCells();\r\n\r\n    // for some reason, Excel can't handle dimensions at the bottom of the file\r\n    // this._writeDimensions();\r\n\r\n    this._writeHyperlinks();\r\n    this._writeConditionalFormatting();\r\n    this._writeDataValidations();\r\n    this._writeSheetProtection();\r\n    this._writePageMargins();\r\n    this._writePageSetup();\r\n    this._writeBackground();\r\n\r\n    // Legacy Data tag for comments\r\n    this._writeLegacyData();\r\n\r\n    this._writeCloseWorksheet();\r\n    // signal end of stream to workbook\r\n    this.stream.end();\r\n\r\n    this._sheetCommentsWriter.commit();\r\n    // also commit the hyperlinks if any\r\n    this._sheetRelsWriter.commit();\r\n\r\n    this.committed = true;\r\n  }\r\n\r\n  // return the current dimensions of the writer\r\n  get dimensions() {\r\n    return this._dimensions;\r\n  }\r\n\r\n  get views() {\r\n    return this._views;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Columns\r\n\r\n  // get the current columns array.\r\n  get columns() {\r\n    return this._columns;\r\n  }\r\n\r\n  // set the columns from an array of column definitions.\r\n  // Note: any headers defined will overwrite existing values.\r\n  set columns(value) {\r\n    // calculate max header row count\r\n    this._headerRowCount = value.reduce((pv, cv) => {\r\n      const headerCount = (cv.header && 1) || (cv.headers && cv.headers.length) || 0;\r\n      return Math.max(pv, headerCount);\r\n    }, 0);\r\n\r\n    // construct Column objects\r\n    let count = 1;\r\n    const columns = (this._columns = []);\r\n    value.forEach(defn => {\r\n      const column = new Column(this, count++, false);\r\n      columns.push(column);\r\n      column.defn = defn;\r\n    });\r\n  }\r\n\r\n  getColumnKey(key) {\r\n    return this._keys[key];\r\n  }\r\n\r\n  setColumnKey(key, value) {\r\n    this._keys[key] = value;\r\n  }\r\n\r\n  deleteColumnKey(key) {\r\n    delete this._keys[key];\r\n  }\r\n\r\n  eachColumnKey(f) {\r\n    _.each(this._keys, f);\r\n  }\r\n\r\n  // get a single column by col number. If it doesn't exist, it and any gaps before it\r\n  // are created.\r\n  getColumn(c) {\r\n    if (typeof c === 'string') {\r\n      // if it matches a key'd column, return that\r\n      const col = this._keys[c];\r\n      if (col) return col;\r\n\r\n      // otherwise, assume letter\r\n      c = colCache.l2n(c);\r\n    }\r\n    if (!this._columns) {\r\n      this._columns = [];\r\n    }\r\n    if (c > this._columns.length) {\r\n      let n = this._columns.length + 1;\r\n      while (n <= c) {\r\n        this._columns.push(new Column(this, n++));\r\n      }\r\n    }\r\n    return this._columns[c - 1];\r\n  }\r\n\r\n  // =========================================================================\r\n  // Rows\r\n  get _nextRow() {\r\n    return this._rowZero + this._rows.length;\r\n  }\r\n\r\n  // iterate over every uncommitted row in the worksheet, including maybe empty rows\r\n  eachRow(options, iteratee) {\r\n    if (!iteratee) {\r\n      iteratee = options;\r\n      options = undefined;\r\n    }\r\n    if (options && options.includeEmpty) {\r\n      const n = this._nextRow;\r\n      for (let i = this._rowZero; i < n; i++) {\r\n        iteratee(this.getRow(i), i);\r\n      }\r\n    } else {\r\n      this._rows.forEach(row => {\r\n        if (row.hasValues) {\r\n          iteratee(row, row.number);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  _commitRow(cRow) {\r\n    // since rows must be written in order, we commit all rows up till and including cRow\r\n    let found = false;\r\n    while (this._rows.length && !found) {\r\n      const row = this._rows.shift();\r\n      this._rowZero++;\r\n      if (row) {\r\n        this._writeRow(row);\r\n        found = row.number === cRow.number;\r\n        this._rowZero = row.number + 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  get lastRow() {\r\n    // returns last uncommitted row\r\n    if (this._rows.length) {\r\n      return this._rows[this._rows.length - 1];\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  // find a row (if exists) by row number\r\n  findRow(rowNumber) {\r\n    const index = rowNumber - this._rowZero;\r\n    return this._rows[index];\r\n  }\r\n\r\n  getRow(rowNumber) {\r\n    const index = rowNumber - this._rowZero;\r\n\r\n    // may fail if rows have been comitted\r\n    if (index < 0) {\r\n      throw new Error('Out of bounds: this row has been committed');\r\n    }\r\n    let row = this._rows[index];\r\n    if (!row) {\r\n      this._rows[index] = row = new Row(this, rowNumber);\r\n    }\r\n    return row;\r\n  }\r\n\r\n  addRow(value) {\r\n    const row = new Row(this, this._nextRow);\r\n    this._rows[row.number - this._rowZero] = row;\r\n    row.values = value;\r\n    return row;\r\n  }\r\n\r\n  // ================================================================================\r\n  // Cells\r\n\r\n  // returns the cell at [r,c] or address given by r. If not found, return undefined\r\n  findCell(r, c) {\r\n    const address = colCache.getAddress(r, c);\r\n    const row = this.findRow(address.row);\r\n    return row ? row.findCell(address.column) : undefined;\r\n  }\r\n\r\n  // return the cell at [r,c] or address given by r. If not found, create a new one.\r\n  getCell(r, c) {\r\n    const address = colCache.getAddress(r, c);\r\n    const row = this.getRow(address.row);\r\n    return row.getCellEx(address);\r\n  }\r\n\r\n  mergeCells() {\r\n    // may fail if rows have been comitted\r\n    const dimensions = new Dimensions(Array.prototype.slice.call(arguments, 0)); // convert arguments into Array\r\n\r\n    // check cells aren't already merged\r\n    this._merges.forEach(merge => {\r\n      if (merge.intersects(dimensions)) {\r\n        throw new Error('Cannot merge already merged cells');\r\n      }\r\n    });\r\n\r\n    // apply merge\r\n    const master = this.getCell(dimensions.top, dimensions.left);\r\n    for (let i = dimensions.top; i <= dimensions.bottom; i++) {\r\n      for (let j = dimensions.left; j <= dimensions.right; j++) {\r\n        if (i > dimensions.top || j > dimensions.left) {\r\n          this.getCell(i, j).merge(master);\r\n        }\r\n      }\r\n    }\r\n\r\n    // index merge\r\n    this._merges.push(dimensions);\r\n  }\r\n\r\n  // ===========================================================================\r\n  // Conditional Formatting\r\n  addConditionalFormatting(cf) {\r\n    this.conditionalFormatting.push(cf);\r\n  }\r\n\r\n  removeConditionalFormatting(filter) {\r\n    console.log('conditionalFormatting', this.conditionalFormatting);\r\n    if (typeof filter === 'number') {\r\n      this.conditionalFormatting.splice(filter, 1);\r\n    } else if (filter instanceof Function) {\r\n      this.conditionalFormatting = this.conditionalFormatting.filter(filter);\r\n    } else {\r\n      this.conditionalFormatting = [];\r\n    }\r\n  }\r\n\r\n  // =========================================================================\r\n\r\n  addBackgroundImage(imageId) {\r\n    this._background = {\r\n      imageId,\r\n    };\r\n  }\r\n\r\n  getBackgroundImageId() {\r\n    return this._background && this._background.imageId;\r\n  }\r\n\r\n  // ================================================================================\r\n\r\n  _write(text) {\r\n    xmlBuffer.reset();\r\n    xmlBuffer.addText(text);\r\n    this.stream.write(xmlBuffer);\r\n  }\r\n\r\n  _writeSheetProperties(xmlBuf, properties, pageSetup) {\r\n    const sheetPropertiesModel = {\r\n      outlineProperties: properties && properties.outlineProperties,\r\n      tabColor: properties && properties.tabColor,\r\n      pageSetup:\r\n        pageSetup && pageSetup.fitToPage\r\n          ? {\r\n              fitToPage: pageSetup.fitToPage,\r\n            }\r\n          : undefined,\r\n    };\r\n\r\n    xmlBuf.addText(xform.sheetProperties.toXml(sheetPropertiesModel));\r\n  }\r\n\r\n  _writeSheetFormatProperties(xmlBuf, properties) {\r\n    const sheetFormatPropertiesModel = properties\r\n      ? {\r\n          defaultRowHeight: properties.defaultRowHeight,\r\n          dyDescent: properties.dyDescent,\r\n          outlineLevelCol: properties.outlineLevelCol,\r\n          outlineLevelRow: properties.outlineLevelRow,\r\n        }\r\n      : undefined;\r\n    if (properties.defaultColWidth) {\r\n      sheetFormatPropertiesModel.defaultColWidth = properties.defaultColWidth;\r\n    }\r\n\r\n    xmlBuf.addText(xform.sheetFormatProperties.toXml(sheetFormatPropertiesModel));\r\n  }\r\n\r\n  _writeOpenWorksheet() {\r\n    xmlBuffer.reset();\r\n\r\n    xmlBuffer.addText('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>');\r\n    xmlBuffer.addText(\r\n      '<worksheet xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"' +\r\n        ' xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\"' +\r\n        ' xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"' +\r\n        ' mc:Ignorable=\"x14ac\"' +\r\n        ' xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\">'\r\n    );\r\n\r\n    this._writeSheetProperties(xmlBuffer, this.properties, this.pageSetup);\r\n\r\n    xmlBuffer.addText(xform.sheetViews.toXml(this.views));\r\n\r\n    this._writeSheetFormatProperties(xmlBuffer, this.properties);\r\n\r\n    this.stream.write(xmlBuffer);\r\n  }\r\n\r\n  _writeColumns() {\r\n    const cols = Column.toModel(this.columns);\r\n    if (cols) {\r\n      xform.columns.prepare(cols, {styles: this._workbook.styles});\r\n      this.stream.write(xform.columns.toXml(cols));\r\n    }\r\n  }\r\n\r\n  _writeOpenSheetData() {\r\n    this._write('<sheetData>');\r\n  }\r\n\r\n  _writeRow(row) {\r\n    if (!this.startedData) {\r\n      this._writeColumns();\r\n      this._writeOpenSheetData();\r\n      this.startedData = true;\r\n    }\r\n\r\n    if (row.hasValues || row.height) {\r\n      const {model} = row;\r\n      const options = {\r\n        styles: this._workbook.styles,\r\n        sharedStrings: this.useSharedStrings ? this._workbook.sharedStrings : undefined,\r\n        hyperlinks: this._sheetRelsWriter.hyperlinksProxy,\r\n        merges: this._merges,\r\n        formulae: this._formulae,\r\n        siFormulae: this._siFormulae,\r\n        comments: [],\r\n      };\r\n      xform.row.prepare(model, options);\r\n      this.stream.write(xform.row.toXml(model));\r\n\r\n      if (options.comments.length) {\r\n        this.hasComments = true;\r\n        this._sheetCommentsWriter.addComments(options.comments);\r\n      }\r\n    }\r\n  }\r\n\r\n  _writeCloseSheetData() {\r\n    this._write('</sheetData>');\r\n  }\r\n\r\n  _writeMergeCells() {\r\n    if (this._merges.length) {\r\n      xmlBuffer.reset();\r\n      xmlBuffer.addText(`<mergeCells count=\"${this._merges.length}\">`);\r\n      this._merges.forEach(merge => {\r\n        xmlBuffer.addText(`<mergeCell ref=\"${merge}\"/>`);\r\n      });\r\n      xmlBuffer.addText('</mergeCells>');\r\n\r\n      this.stream.write(xmlBuffer);\r\n    }\r\n  }\r\n\r\n  _writeHyperlinks() {\r\n    // eslint-disable-next-line no-underscore-dangle\r\n    this.stream.write(xform.hyperlinks.toXml(this._sheetRelsWriter._hyperlinks));\r\n  }\r\n\r\n  _writeConditionalFormatting() {\r\n    const options = {\r\n      styles: this._workbook.styles,\r\n    };\r\n    xform.conditionalFormattings.prepare(this.conditionalFormatting, options);\r\n    this.stream.write(xform.conditionalFormattings.toXml(this.conditionalFormatting));\r\n  }\r\n\r\n  _writeDataValidations() {\r\n    this.stream.write(xform.dataValidations.toXml(this.dataValidations.model));\r\n  }\r\n\r\n  _writeSheetProtection() {\r\n    this.stream.write(xform.sheetProtection.toXml(this.sheetProtection));\r\n  }\r\n\r\n  _writePageMargins() {\r\n    this.stream.write(xform.pageMargins.toXml(this.pageSetup.margins));\r\n  }\r\n\r\n  _writePageSetup() {\r\n    this.stream.write(xform.pageSeteup.toXml(this.pageSetup));\r\n  }\r\n\r\n  _writeAutoFilter() {\r\n    this.stream.write(xform.autoFilter.toXml(this.autoFilter));\r\n  }\r\n\r\n  _writeBackground() {\r\n    if (this._background) {\r\n      if (this._background.imageId !== undefined) {\r\n        const image = this._workbook.getImage(this._background.imageId);\r\n        const pictureId = this._sheetRelsWriter.addMedia({\r\n          Target: `../media/${image.name}`,\r\n          Type: RelType.Image,\r\n        });\r\n\r\n        this._background = {\r\n          ...this._background,\r\n          rId: pictureId,\r\n        };\r\n      }\r\n      this.stream.write(xform.picture.toXml({rId: this._background.rId}));\r\n    }\r\n  }\r\n\r\n  _writeLegacyData() {\r\n    if (this.hasComments) {\r\n      xmlBuffer.reset();\r\n      xmlBuffer.addText(`<legacyDrawing r:id=\"${this._sheetCommentsWriter.vmlRelId}\"/>`);\r\n      this.stream.write(xmlBuffer);\r\n    }\r\n  }\r\n\r\n  _writeDimensions() {\r\n    // for some reason, Excel can't handle dimensions at the bottom of the file\r\n    // and we don't know the dimensions until the commit, so don't write them.\r\n    // this._write('<dimension ref=\"' + this._dimensions + '\"/>');\r\n  }\r\n\r\n  _writeCloseWorksheet() {\r\n    this._write('</worksheet>');\r\n  }\r\n}\r\n\r\nmodule.exports = WorksheetWriter;\r\n"],"file":"worksheet-writer.js"}